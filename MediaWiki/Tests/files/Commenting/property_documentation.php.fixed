<?php

class TestFailedExamples {

	/* @var int */
	private $a;

	/** @var int Test short types */
	private $s;

	private $missingPrivate;
	protected $missingProtected;
	public $missingPublic;
	var $missingWithout;

	/** This is a comment */
	public $missingWithComment;

	/**
	 * @var int
	 * @var string
	 */
	private $duplicate;

	/** @var string */
	var $punctationString;

	/** @var string[] */
	var $arrayString;

	/** @var int Some text */
	var $typeWithPuncation;

	/** @var ?callable(DOMNode):(?DOMNode) T268087 */
	public $combinator = null;

	/** @var */
	public $noType;

	/** @var int */
	public $testUppercasePrimitive;

	/** @var string[] */
	public $testUppercasePrimitiveArray;

	/** @var object */
	public $testObjectTypeHint;

	/** @var object[]|null */
	public $testObjectArrayTypeHint;

	/** @var string Comment */
	public $testSpacing;

	public $testInlineComments; // some special comment

	public $testInlineCommentsNotBelongs;

	/** @var string */

	public $testCommentDoesNotBelongsToProperty;

	/** @var type bad because `type` is probably autogenerated, T273806 */
	private $badType;

	/** @var Type fine because `Type` could be a class name */
	private $goodType;

	/** @var string */
	private readonly $readOnlyType;

	/** @var string */
	final protected $finalType;

}

class TestPassedExamples {

	/**
	 * @see OtherClass
	 * @var int
	 */
	private $a;

	/** @var int */
	protected $b;

	/** @var int */
	public $c;

	/** @var int */
	var $d;

	/** @deprecated */
	var $dep;

	/** @inheritDoc */
	public $inherit;

	/** @var array<int, string> */
	public $javaStyle;

	var array $ta;
	public int $tb;
	protected bool $tc;
	private string $td;

	/** A variable with prose documentation but only a static type. */
	public string $tdoc;

	// Some comment with wrong style, but typed property is okay to have it

	public string $wrongStyleDoc;

	// phpcs:disable Squiz.WhiteSpace.ScopeKeywordSpacing.Incorrect

	/**
	 * Visibility is on its own line, which is rare because a Squiz
	 * sniff complains about it, but if that sniff is suppressed
	 * SpacingAfter shouldn't complain that the variable is not
	 * on the line after the comment ends, see T271267
	 *
	 * @var int
	 */
	private
		$intOnOwnLine;

	// phpcs:enable Squiz.WhiteSpace.ScopeKeywordSpacing.Incorrect

	/**
	 * Test should not process local vars
	 * @param int $a1
	 * @param int $a2
	 * @return int
	 */
	public function test( $a1, $a2 ) {
		return $a1 * $a2;
	}
}
